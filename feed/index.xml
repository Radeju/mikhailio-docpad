<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Mikhail Shilkov</title>
    <link href="http://mikhail.io/feed/" rel="self"/>
    <link href="http://mikhail.io"/>
    <updated>2015-01-29T21:40:46.324Z</updated>
    <id>http://mikhail.io/</id>
    <author>
        <name>Mikhail Shilkov</name>
        <email></email>
    </author>

    
    <entry>
        <title>Nice way to kill your SQL Server</title>
        <link href="http://mikhail.io/2014/10/16/nice-way-to-kill-your-sql-server/"/>
        <updated>2014-10-16T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2014-10-16,/2014/10/16/nice-way-to-kill-your-sql-server/</id>
        <content type="html"><![CDATA[<p>Are you getting enormous amount of </p>
<pre><code>The activated proc &#39;...&#39; running on queue &#39;...&#39; output the following:
&#39;The service queue &quot;...&quot; is currently disabled.
</code></pre><p>errors from SQL Server? Keep on reading!</p>
<p>Yesterday, when I came back from my lunch, I got a heads-up from Windows:
<img src="http://mikhail.io/2014/10/16/nice-way-to-kill-your-sql-server//low-disk-space.gif" alt="Low disk space"></p>
<p>And it was literally out of space: 0 (zero) bytes available on C: drive. Wow...</p>
<p>I cleaned up the binary files from my developments, which gave me 3 GB of free space and some time to do the investigation. A short time, because disk space was counting down at about 300 MB per minute.</p>
<p>It appeared that the SQL Server error log files grew up to 53 GB and were still growing. Here is the default folder where you can find them:</p>
<p><img src="http://mikhail.io/2014/10/16/nice-way-to-kill-your-sql-server//errorlog.png" alt="SQL Server error log"></p>
<p>To gain more time, I executed the command</p>
<pre><code>exec sp_cycle_error
</code></pre><p>is Management Studio. It renames current ERRORLOG file to ERRORLOG.1 and starts the new current. So now it was safe to delete all .1/.2/etc files and get those 53 GB back. Huh...</p>
<p>Now it&#39;s time to figure out the actual issue. Go to Management Studio -&gt; your server -&gt; Management -&gt; SQL Server Logs -&gt; Current -&gt; (right click) -&gt; View SQL Server Log</p>
<p>I saw millions of the following messages there (let&#39;s say my queue is named XQueue for simplicity):</p>
<pre><code>The activated proc &#39;[dbo].[XQueueProcessor]&#39; running 
on queue &#39;dbo.XQueue&#39; output the following:
&#39;The service queue &quot;XQueue&quot; is currently disabled.
</code></pre><p>So, it looks like there is a problem with SQL Server Service Broker, which is constantly trying to read something from disabled queue. Isn&#39;t it supposed to stop after 5 attempts (a.k.a. poison messages)? Ok, keep on troubleshooting.</p>
<p>First, let check if the queue is actually disabled</p>
<pre><code>SELECT Name, is_receive_enabled, is_enqueue_enabled
  FROM sys.service_queues 
 WHERE Name = &#39;XQueue&#39;  
</code></pre><p>Yep, it&#39;s disabled:
<img src="http://mikhail.io/2014/10/16/nice-way-to-kill-your-sql-server//qdisabled.png" alt="XQueue disabled"></p>
<p>Do we have anything queued?</p>
<pre><code>SELECT TOP 1000 *
  FROM [XQueue] WITH(NOLOCK) 
</code></pre><p>I got 9 rows back. This means we got some messages en-queued, and one of them failed to process, the message was considered as poison and the queue was disabled (which is good), but the processor still seems to be running in eternal loop.</p>
<p>So, let&#39;s have a look at the processor. We had something like that:</p>
<pre><code>CREATE PROCEDURE [dbo].[XQueueProcessor]
AS
BEGIN
    DECLARE 
        @queuing_order BIGINT
        ,@conversation_handle UNIQUEIDENTIFIER
        ,@message_enqueue_time DATETIME
        ,@message_type_name VARCHAR(156)
        ,@message_body VARBINARY(MAX);

    WHILE(1=1) -- MAIN WHILE LOOP RECEIVING THE MESSAGE BATCHES
    BEGIN
        BEGIN TRANSACTION
        BEGIN TRY
            WAITFOR(RECEIVE TOP(1)
                        @queuing_order = [queuing_order],
                        @conversation_handle = [conversation_handle],
                        @message_enqueue_time = message_enqueue_time,
                        @message_type_name = message_type_name,
                        @message_body = message_body
                    FROM [dbo].[XQueue]), TIMEOUT 10

            IF (@@ROWCOUNT = 0)
            BEGIN
                ROLLBACK TRANSACTION
                BREAK
            END    

            -- SOME CRUD OPERATIONS HAPPEN HERE        

            COMMIT TRANSACTION
        END TRY
        BEGIN CATCH            
            DECLARE @Error varchar(4000) = ERROR_MESSAGE()
            PRINT @Error
            ROLLBACK TRANSACTION
        END CATCH        
    END
END
</code></pre><p>A-ha! So, what happens when an error occurs during the message processing? Control goes to CATCH block, error message is printed out (when we are in Service Broker, print goes directly to ERRORLOG file which we saw already), the transaction is rolled back... But we still are inside eternal loop, no BREAK or RETURN statement there, so the processor will try again to get the same message from the queue. After 5th attempt, the message will be marked as poison, the queue will get disabled, but the loop will keep running! The exception will change to &quot;The service queue is currently disabled&quot; and voila, CPU is busy and error logs are floating the disk.</p>
<p>The fix is pretty trivial, just change the CATCH block to</p>
<pre><code>BEGIN CATCH            
    DECLARE @Error varchar(4000) = ERROR_MESSAGE()
    PRINT @Error
    ROLLBACK TRANSACTION
    RETURN
END CATCH        
</code></pre><p>Be careful!</p>
]]></content>
    </entry>
    
    <entry>
        <title>SQL: produce resultset with N rows</title>
        <link href="http://mikhail.io/2014/06/03/sql-produce-resultset-with-n-rows/"/>
        <updated>2014-06-03T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2014-06-03,/2014/06/03/sql-produce-resultset-with-n-rows/</id>
        <content type="html"><![CDATA[<p>Let&#39;s talk about T-SQL today.</p>
<p>Sometimes you need to produce a result set, which would contain N rows with numbers 1...N in each row. For example, I needed to calculate some statistics per week for N weeks starting from today and going back to the past.</p>
<p>Here is a table funtion which does the enumeration:</p>
<pre><code>CREATE FUNCTION dbo.fnEnumerateNumbers(@max int) 
RETURNS TABLE 
RETURN 
WITH
 E1(N) AS (SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
           SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
           SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
           SELECT 1),                 --10E1  or 10 rows
 E2(N) AS (SELECT 1 FROM E1 a, E1 b), --10E2  or 100 rows
 E4(N) AS (SELECT 1 FROM E2 a, E2 b), --10E4  or 10000 rows
 E8(N) AS (SELECT 1 FROM E4 a, E4 b)  --10E8  or 100000000 rows
SELECT TOP (@max) N = ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) 
  FROM E8
</code></pre><p>Usage is trivial:</p>
<pre><code>SELECT N
  FROM dbo.fnEnumerateNumbers(100)
</code></pre><p>And here is how I solved the task of enumerating weeks:</p>
<pre><code>SELECT dateadd(week, 1 - N, getutcdate()) 
  FROM dbo.fnEnumerateNumbers(100)
</code></pre><p>There are multiple possibilities to implement similar function, but I believe this way is the best one in terms of performance. No temporary tables, no table reads, no dependencies on table existance, and you can define your maximum yourself.</p>
<p>Happy coding!</p>
]]></content>
    </entry>
    
    <entry>
        <title>Sgen to precompile classes for XmlSerializer</title>
        <link href="http://mikhail.io/2014/05/21/sgen-to-precompile-classes-for-xmpserializer/"/>
        <updated>2014-05-21T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2014-05-21,/2014/05/21/sgen-to-precompile-classes-for-xmpserializer/</id>
        <content type="html"><![CDATA[<p>During my investigation of our ASP.NET application performance issue, I&#39;ve found out that XmlSerializer may require a long warm-up. The first time, when it&#39;s used for a specific class (de-)serialization, can take up to 500 ms om my machine! We use XmlSerializer to encode/decode user preferences. Having 40 different classes being deserialized at user login lead to a massive delay of 14 seconds. This is only for the first user login after the application start-up, but you do quite a lot of &#39;first times&#39; every day while developing the application.</p>
<p>These delays are caused by the runtime which prepares and compiles the strongly typed classes for serialization in runtime. Not sure why it&#39;s SO slow, but probably things might go wrong.</p>
<p>There is a simple solution for this problem: create those helper classes at build time, pack it into an assembly and ship it as part of your .NET application. The tool that does this is called Sgen.exe, and it is a part of .NET SDK. So, we just need to use it in our project.</p>
<p>The easiest way is to add a post-build event in your CS project properties. The event would look like</p>
<p><pre>sgen.exe /force /assembly:&quot;$(TargetPath)&quot;</pre>
After re-compiling the project, you should see a new assembly in Bin directory, which has the name ending with XmlSerializers.dll. That&#39;s the new assembly which will save you several seconds on each application start-up. It will be automatically copied to Bin directory of the projects which reference the original assembly with your serializable classes, so no other actions needed.</p>
<p>However, this command might fail. Sgen tool will try to prepare the helper classes for each class in your assembly, which might not be possible. Then you&#39;ll get some error messages in Visual Studio. In this case, you might want to add a &quot;/types&quot; parameter, explicitly listing the class names to precompile. But I have a better solution for you.</p>
<p>It&#39;s quite possible that you use MSBuild for regular automated builds of your project. We do. In this case a post-build event in the project properties won&#39;t work during those build. Then, do not add any post-build events, but instead open your .csproj file in plain text editor, and search for the following commented section:</p>
<pre><code>&lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
   Other similar extension points exist, see Microsoft.Common.targets.
&lt;Target Name=&quot;BeforeBuild&quot;&gt;
&lt;/Target&gt;
&lt;Target Name=&quot;AfterBuild&quot;&gt;
&lt;/Target&gt;
--&gt;
</code></pre><p>Uncomment the second XML node and substitute it with something like this:</p>
<pre><code>&lt;Target Name=&quot;AfterBuild&quot; DependsOnTargets=&quot;AssignTargetPaths;Compile;ResolveKeySource&quot; Inputs=&quot;$(MSBuildAllProjects);@(IntermediateAssembly)&quot; Outputs=&quot;$(OutputPath)$(_SGenDllName)&quot;&gt;
    &lt;ItemGroup&gt;
      &lt;SgenTypes Include=&quot;MyNamespace.MySerializableClass1&quot; /&gt;
      &lt;SgenTypes Include=&quot;MyNamespace.MySerializableClass2&quot; /&gt;
      &lt;SgenTypes Include=&quot;MyNamespace.MySerializableClassN&quot; /&gt;
    &lt;/ItemGroup&gt;
    &lt;Delete Files=&quot;$(TargetDir)$(TargetName).XmlSerializers.dll&quot; ContinueOnError=&quot;true&quot; /&gt;
    &lt;SGen BuildAssemblyName=&quot;$(TargetFileName)&quot; BuildAssemblyPath=&quot;$(OutputPath)&quot; References=&quot;@(ReferencePath)&quot; ShouldGenerateSerializer=&quot;true&quot; UseProxyTypes=&quot;false&quot; KeyContainer=&quot;$(KeyContainerName)&quot; KeyFile=&quot;$(KeyOriginatorFile)&quot; DelaySign=&quot;$(DelaySign)&quot; ToolPath=&quot;$(SGenToolPath)&quot; Types=&quot;@(SgenTypes)&quot;&gt;
      &lt;Output TaskParameter=&quot;SerializationAssembly&quot; ItemName=&quot;SerializationAssembly&quot; /&gt;
    &lt;/SGen&gt;
&lt;/Target&gt;
</code></pre><p>The ItemGroup lists all the classes that you need to precompile. You can omit this section and Types attribute of SGen node if you want to compile all classes in assembly.
Have a nice application start-up boost!</p>
]]></content>
    </entry>
    
    <entry>
        <title>Poker Money application for Windows Store</title>
        <link href="http://mikhail.io/2013/01/06/poker-money-application-for-windows-store/"/>
        <updated>2013-01-06T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2013-01-06,/2013/01/06/poker-money-application-for-windows-store/</id>
        <content type="html"><![CDATA[<p>Windows 8 / Windows RT / Windows Store all arrived in October 2012.</p>
<p>I&#39;ve decided to take a shot on writing a commercial application for this new platform. And that&#39;s how Poker Money app appeared.</p>
<p>Here are the links to it:</p>
<p><a href="http://pokermoneyapp.com" title="Poker money app official website">Poker Money app official website</a></p>
<p><a href="http://apps.microsoft.com/windows/ru-RU/app/poker-money/47c61b67-94ec-4aae-a9c4-f60a37d7cc03" title="Poker Money in Windows Store">Windows Store application page</a></p>
<p><a href="http://forumserver.twoplustwo.com/45/software/poker-money-app-1282491/" title="Support thread for Poker Money">Support thread on 2+2</a></p>
<p>Poker Money is a basic tool for tracking online poker results, which supports all game types for the two major poker rooms: PokerStars and FullTiltPoker.</p>
<p>Here is a sample screen:
<img src="http://mikhail.io/2013/01/06/poker-money-application-for-windows-store//pokermoneyapp-screen.png" alt="Poker Money app on Windows 8"></p>
]]></content>
    </entry>
    
    <entry>
        <title>One certificate missing, one received unexpectedly</title>
        <link href="http://mikhail.io/2012/12/26/one-certificate-missing-one-received-unexpectedly/"/>
        <updated>2012-12-26T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2012-12-26,/2012/12/26/one-certificate-missing-one-received-unexpectedly/</id>
        <content type="html"><![CDATA[<p>Today I want to give a note about two more online courses that I completed.</p>
<p>The last one (10 weeks in September-November) was called <a href="https://www.coursera.org/course/compfinance">Introduction to Computational Finance and Financial Econometrics</a> and was lead by Eric Zivot from University of Washington. First of all, it was the most intense course out of all that I took to date. Every of 10 weeks we had about 3-4 hours of videos + homework. The course material was mostly about maths and statistics, and less about application in economics. However, some concepts were new to me and sounded very interesting.</p>
<p>I scored about 95% on all tests and exams (they were relatively easy comparing to video material). But unfortunately, I got no certificate or even course record for this! It seems that University of Washington did not allow Coursera to issue such certificates and records... What a shame! I spent lots of time on it, and a record would be satisfactory. Please be careful if you take this course or other courses of UoW in the future.</p>
<p>However, I got another unexpected certificate. In June, I took a course called <a href="https://www.coursera.org/course/hci">Human-Computer Interaction</a> about user interface design concepts and approaches. I started it with a big delay because of my vacation, so I thought I wouldn&#39;t score enough for a certificate. But I was wrong! I got the certificate 6 months after the course ended:
<img src="http://mikhail.io/2012/12/26/one-certificate-missing-one-received-unexpectedly//hci.jpg" alt="HCI certificate"></p>
<p>The course was short but useful. I wish there would be an extension course, which would cover more details on the topic.</p>
]]></content>
    </entry>
    
    <entry>
        <title>Introduction to Finance class at Coursera</title>
        <link href="http://mikhail.io/2012/11/01/finance-class-at-coursera/"/>
        <updated>2012-11-01T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2012-11-01,/2012/11/01/finance-class-at-coursera/</id>
        <content type="html"><![CDATA[<p>I&#39;ve recently received a statement of accomplishment document for <a href="https://www.coursera.org/" title="Coursera">Coursera</a>&#39;s online <a href="https://www.coursera.org/course/introfinance" title="Introduction to Finance class">Introduction to Finance class</a> that I took in July-September this year.</p>
<p><img src="http://mikhail.io/2012/11/01/finance-class-at-coursera//finance.jpg" alt="Finance"></p>
<p>The course was lead by prof. Gautam Kaul from University of Michigan. The level of lectures was really introductory, the pace was very slow (too slow for me, even watching x1.5 speed). You could learn about basic finance principles like time value of money, calculating cash flows and discounted values, about stocks and bonds, and risk/return relations.</p>
<p>I liked a lot the assignment tests, which were much stronger and solid then the examples in lectures. They were challenging most of the time, so I&#39;m glad I managed to get 100% score in the end :)</p>
<p>Recommended for anyone who has no idea about what finance is about, but not for experienced students.</p>
]]></content>
    </entry>
    
    <entry>
        <title>Gamification class at Coursera</title>
        <link href="http://mikhail.io/2012/10/29/gamification-class-at-coursera/"/>
        <updated>2012-10-29T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2012-10-29,/2012/10/29/gamification-class-at-coursera/</id>
        <content type="html"><![CDATA[<p>I&#39;ve recently received a statement of accomplishment document for <a href="https://www.coursera.org/" title="Coursera">Coursera</a>&#39;s online <a href="https://www.coursera.org/course/gamification" title="Gamification class">Gamification class</a> that I took in August-October this year.</p>
<p><img src="http://mikhail.io/2012/10/29/gamification-class-at-coursera//gamification.jpg" alt="Gamification certificate" title="Gamification certificate"></p>
<p>The course was lead by prof. Kevin Werbach from The Wharton School, University of Pennsylvania. He told us about applying game techniques to non-game world problems: business, social etc. In essence, it&#39;s on how to add FUN to processes, that are not supposed to be fun at all. Which is really cool. I loved both informative and well-producted lectures, and peer-reviewed assignments that appeared to be... fun :)</p>
<p>Want to know why Stackoverflow and Foursquare are such a success? Come join this course next time!</p>
<p>I hope I&#39;ll have a chance to apply the ideas from the course in real life!</p>
]]></content>
    </entry>
    
    <entry>
        <title>Use Fiddler to debug urlfetch requests in Google AppEngine</title>
        <link href="http://mikhail.io/2012/09/02/use-fiddler-to-debug-urlfetch-requests-in-google-appengine/"/>
        <updated>2012-09-02T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2012-09-02,/2012/09/02/use-fiddler-to-debug-urlfetch-requests-in-google-appengine/</id>
        <content type="html"><![CDATA[<p>In <a href="http://www.tripbenefit.com" title="TripBenefit.com - travel in St. Petersburg, Russia">TripBenefit</a> application, we use a lot of web crawling to get data from third-party websites. As the application works on top of Google AppEngine, the <a href="https://developers.google.com/appengine/docs/python/urlfetch/fetchfunction?hl=ru" title="urlfetch.fetch() docs">urlfetch.fetch()</a> function is used to send HTTP requests and get responses.</p>
<p>Some crawling is not as easy as just a simple GET request, so we have to send specific POST data, cookies and HTTP headers. And all this needs to be debugged. <a href="http://www.fiddler2.com" title="Fiddler2 web debugging tool">Fiddler2</a> is the gold standard for web debugging tools, so I&#39;d like to use it in this case too. I.e. I want to see urlfetch requests displayed in Fiddler, while I&#39;m on development env.<strong>
</strong></p>
<p>However, to make it work, I have to make AppEngine run all fetch requests through the Fiddler&#39;s proxy: localhost:8888. As proxies aren&#39;t supported within Google production environment, it&#39;s not supported by development engine either. There&#39;s simply no such &#39;proxy&#39; parameter in urlfetch!</p>
<p>It seems that the only way to overcome this limitation is to modify the code of AppEngine development server. It isn&#39;t that tricky as it sounds! :)</p>
<p>Stop all your developmenet AppEngine instances. Go to your AppEngine folder, and then to \google\appengine\api. Edit urlfetch_stub.py (make a backup beforehand). Search for &quot;connection =&quot; line, something like</p>
<pre><code>if _CONNECTION_SUPPORTS_TIMEOUT:
  connection = connection_class(host, timeout=deadline)
else:
  connection = connection_class(host)
</code></pre><p>Substitute it with </p>
<pre><code>connection = connection_class(&#39;127.0.0.1&#39;, 8888)
</code></pre><p>Then, search for &quot;connection.request&quot; method call similar to</p>
<pre><code>connection.request(method, full_path, payload, adjusted_headers)
</code></pre><p>and insert another line before it:</p>
<pre><code>full_path = protocol + &quot;://&quot; + host + full_path
</code></pre><p>Done! After you run the dev server and Fiddler2, you should be able to see urlfetch requests in web debugger. Have a nice debugging session!</p>
]]></content>
    </entry>
    
    <entry>
        <title>Google adds Public Transit into API</title>
        <link href="http://mikhail.io/2012/08/14/google-adds-public-transit-into-api/"/>
        <updated>2012-08-14T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2012-08-14,/2012/08/14/google-adds-public-transit-into-api/</id>
        <content type="html"><![CDATA[<p>Now, both Google Directions Web Services and Google Maps JavaScript API include building the routes with Public Transit.</p>
<p>Blog post:</p>
<p><a href="http://googlegeodevelopers.blogspot.com/2012/06/public-transit-routing-and-layer-now.html">http://googlegeodevelopers.blogspot.com/2012/06/public-transit-routing-and-layer-now.html</a></p>
<p>API docs:</p>
<p><a href="https://developers.google.com/maps/documentation/directions/#TravelModes">https://developers.google.com/maps/documentation/directions/#TravelModes</a></p>
<p><a href="https://developers.google.com/maps/documentation/javascript/directions#TransitOptions">https://developers.google.com/maps/documentation/javascript/directions#TransitOptions</a></p>
<p>Sample request in St. Petersburg:</p>
<p><a href="http://maps.googleapis.com/maps/api/directions/json?origin=59.94473,30.294254&amp;destination=59.80612,30.308552&amp;sensor=false&amp;departure_time=1346197500&amp;mode=transit">http://maps.googleapis.com/maps/api/directions/json?origin=59.94473,30.294254&amp;destination=59.80612,30.308552&amp;sensor=false&amp;departure_time=1346197500&amp;mode=transit</a></p>
]]></content>
    </entry>
    
    <entry>
        <title>Enable jinja2 and i18n translations on Google AppEngine</title>
        <link href="http://mikhail.io/2012/07/26/enable-jinja2-and-i18n-translations-on-google-appengine/"/>
        <updated>2012-07-26T00:00:00.000Z</updated>
        <id>tag:mikhail.io,2012-07-26,/2012/07/26/enable-jinja2-and-i18n-translations-on-google-appengine/</id>
        <content type="html"><![CDATA[<p>My initial goal was to make our new application (based on python/AppEngine) translatable. This means the following requirements:</p>
<ol>
<li>All strings in the application must be translatable</li>
<li>Translations should preferably stored in separate files</li>
<li>It should be easy to use the translations both in .py files and html templates</li>
</ol>
<p>The solution that I came to after a couple of hours includes the following components: Babel (string file generation), i18n.gettext (getting strings in code) and jinja2 &lt;% trans %&gt; tag (getting strings in templates). The setup of all this is not obvious, so I&#39;ll put the steps in this blog post. Let&#39;s start!</p>
<ol>
<li><p>Intall Babel: <a href="http://babel.edgewall.org/">http://babel.edgewall.org/</a></p>
<p> You need to install it, not just ref from the application, as you&#39;ll need its comman &#39;pybabel&#39; to generate locale-specific files. I use Windows, so I just downloaded the installation package.</p>
<p> Make sure that Python folders are in your PATH variable. I use Python 2.7, so to make Babel work I&#39;ll need the following values in PATH: &quot;C:\Python27;C:\Python27\Scripts&quot;. Scripts folder contains the pybabel executable.</p>
</li>
<li><p>Install jinja2: <a href="http://jinja.pocoo.org/">http://jinja.pocoo.org</a>
Once again, you need to install it, as Babel will need it to parse strings in templates. Just run</p>
<pre><code> easy_install Jinja2
</code></pre></li>
<li><p>Put Babel and <a href="http://pypi.python.org/pypi/gaepytz">gaepytz</a> libraries inside your GAE application. They are required for i18n module.</p>
</li>
<li><p>Configure jinja2 to be used in your application. You&#39;ll need the following entry in app.yaml:</p>
<pre><code> libraries:
 - name: jinja2
   version: &quot;2.6&quot;
</code></pre><p> and your webhandler.py will look something similar to this:</p>
<pre><code> import webapp2
 from webapp2_extras import jinja2
 from webapp2_extras import i18n
 from google.appengine.ext.webapp.util import run_wsgi_app

 class MainHandler(webapp2.RequestHandler):
     @webapp2.cached_property
     def jinja2(self):
         return jinja2.get_jinja2(app=self.app)

     def get(self):
         i18n.get_i18n().set_locale(&#39;ru_RU&#39;) # sample locale assigned
         ... # your web site functionality goes here

 # jinja2 config with i18n enabled
 config = {&#39;webapp2_extras.jinja2&#39;: {
              &#39;template_path&#39;: &#39;templates&#39;,
              &#39;environment_args&#39;: { &#39;extensions&#39;: [&#39;jinja2.ext.i18n&#39;] }
            }
           }
 application = webapp2.WSGIApplication([(&#39;.*&#39;, MainHandler)], config=config)

 def main():
     run_wsgi_app(application)

 if __name__ == &quot;__main__&quot;:
     main()
</code></pre><p> This code will work if you put your jinja2 templates into &quot;templates&quot; folder.</p>
</li>
<li><p>Create the translations markup. This means, you define the translatable strings in python code with a commonly used &#39;_&#39; alias:</p>
<pre><code> from webapp2_extras.i18n import gettext as _

 def do_some_text():
     return _(&#39;some text&#39;)
</code></pre><p> or in jijna2 template with {% trans %} block:</p>
<pre><code> {% block buttons %}
 &lt;div&gt;    
     &lt;div onclick=&quot;window.print()&quot;&gt;{% trans %}Print{% endtrans %}&lt;/div&gt;
 &lt;/div&gt;
 {% endblock %}
</code></pre></li>
<li><p>Create a Babel configuration file babel.cfg (put it into the application folder for now):</p>
<pre><code> [jinja2: **/templates/**.html]
 encoding = utf-8
 [python: source/*.py]
 [extractors] 
 jinja2 = jinja2.ext:babel_extract
</code></pre><p> This file instructs Babel to extract translatable strings from html jinja2 templates in &quot;templates&quot; folder and python files in &quot;source&quot; folder. </p>
</li>
<li><p>Now it&#39;s time to create translations. First, add a &quot;locale&quot; folder in application root. Still being in root folder, run the following pybabel command to extract the translatable strings from the code</p>
<pre><code> pybabel extract -F ./babel.cfg -o ./locale/messages.pot ./
</code></pre><p> then initialize the locales with </p>
<pre><code> pybabel init -l en_US -d ./locale -i ./locale/messages.pot
 pybabel init -l ru_RU -d ./locale -i ./locale/messages.pot
</code></pre><p> Now open locale\ru_RU\LC_MESSAGES\messages.po file in your favorite text editor, and produce the translations (you have to change &#39;msgstr&#39; only):</p>
<pre><code> #: templates/sample.html:10
 msgid &quot;Print&quot;
 msgstr &quot;Печать&quot;
 #: source/test.py:13
 msgid &quot;some text&quot;
 msgstr &quot;немного текста&quot;
</code></pre><p> And finally compile the texts with</p>
<pre><code> pybabel compile -f -d ./locale
</code></pre></li>
<li><p>Every time you need to add more strings, you should do the same steps as in 6, but use &quot;update&quot; instead of &quot;init&quot;:</p>
<pre><code> pybabel update -l en_US -d ./locale -i ./locale/messages.pot
 pybabel update -l ru_RU -d ./locale -i ./locale/messages.pot
</code></pre></li>
</ol>
<p>Done! You should be able to run the application and see the strings translated.</p>
]]></content>
    </entry>
    
</feed>